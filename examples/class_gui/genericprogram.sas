/**
Sample program illustrating a SAS process from an app using the sas-appfitter interface

  1. Pull in a dataset from the app
  2. Perform SAS operations/data access
  3. Outputs results in a dataset and send back to app

This program does not need to be modified when changes are made to the rest of the app.

This simple example contains reading/writing to both stream and datastore:
  A plot is drawn using parameters from input dataset
  Add parms to persistent favourites if not already present
  Output status, path to the plot and plot info make the output dataset
**/

/* Import appropriate adapters */
%include "%sysget(HOME)/data_interface/adapters/ffe/sas/ffe.sas"; 

/* Set target for persistent configuration (containing favourites list) */
%let datastoreTarget = ./appconfig.json;

/* Set target for generated outputs (include trailing slash) */
%let outpath = ./output/;


/** Nothing below here needs changing when other parts of application are modified/replaced **/


/* Receive input and deserialise into SAS dataset */
%getStreamDset(obj=axes, outdset=axesdset);

/* Do your SAS things here, work with datasets for process input and output */
%let status = %sysfunc(ifc(%sysfunc(fileexist(&outpath..exampleplot1.jpg)), 200, 201));

/* Determine plot parameters from the input stream dataset */
data _null_;
  if nobs eq 0 then put 'W' 'ARNING: No records found in axesdset';
  if eof and _N_ gt 1 then put 'N' 'OTE: Multiple records were found in axesdset. Last record used';
  set work.axesdset end=eof nobs=nobs;
  call symputx('xaxis',xaxis);
  call symputx('yaxis',yaxis);
  call symputx('title',catx(' vs ',propcase(xaxis),propcase(yaxis)));
run;

/* Import favourites and add axes to favourites if not already in list */
%setupDatastore(
  name=appcfg, 
  targ="&datastoreTarget"
  );
  
%getDatastoreDset(
  name=appcfg, 
  obj=FAVOURITES, 
  outdset=work.favourites
  );
  
data newfavourites(drop=_:);
  length xaxis yaxis $20.;
  set favourites end=eof;
  retain _isFound 0;
  if xaxis eq "&xaxis" and yaxis eq "&yaxis" then _isFound=1;
  output;
  if eof and _isFound eq 0 then do;
    xaxis = "&xaxis";
    yaxis = "&yaxis";
    output;
  end;  
run;

%setDatastoreDset(
  name=appcfg, 
  obj=FAVOURITES, 
  indset=newfavourites
  );
 
%teardownDatastore(
  name=appcfg
  );

/* Create the plot */
ods listing gpath="&outpath";
ods graphics / imagename="exampleplot1" imagefmt=jpg;
proc sgplot data=sashelp.class;
  scatter x=&xaxis y=&yaxis;
run;

/* Create an output dataset to return to the application*/
data myData;
  status = &status;
  plotdesc = "This is an example plot generated by SAS";
  plotpath = "&outpath./exampleplot1.jpg";
run;
  
/* Serialise result dataset and send to other components of the application */
%setStreamDset(obj=myData, indset=work.myData);
